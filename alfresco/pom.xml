<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>alfresco</artifactId>
    <name>Alfresco Repository with Share Services AMP</name>
    <packaging>war</packaging>

    <parent>
        <artifactId>alfresco-share-parent</artifactId>
        <groupId>org.alfresco</groupId>
        <version>5.1-SNAPSHOT</version>
    </parent>

    <properties>
        <runtime.data.folder>${basedir}/runtime</runtime.data.folder>
        <solr.config.folder>${runtime.data.folder}/solr4-instance</solr.config.folder>
        <!-- Filter solrcore.properties -->
        <ALFRESCO_SOLR4_DATA_DIR>${solr.config.folder}/data</ALFRESCO_SOLR4_DATA_DIR>
    </properties>

    <dependencies>
        <!-- Defines WAR to overlay -->
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-platform</artifactId>
            <version>${project.version}</version>
            <classifier>nossl</classifier>
            <type>war</type>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>alfresco</finalName>

        <plugins> 
            <!-- Configure war overlay without exclusions, so that we get the MANIFEST.MF, which MMT needs -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <overlays>
                        <overlay>
                            <groupId>org.alfresco</groupId>
                            <artifactId>alfresco-platform</artifactId>
                            <classifier>nossl</classifier>
                            <excludes/>
                        </overlay>
                    </overlays>
                </configuration>
                <!-- This allows overlays to be prepared on the FS for minification and faster run -->
                <executions>
                    <execution>
                        <id>prepare-exploded-war</id>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>                
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Fetch amp files -->
                    <execution>
                        <id>fetch-amps</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.alfresco</groupId>
                                    <artifactId>alfresco-share-services</artifactId>
                                    <version>${project.version}</version>
                                    <type>amp</type>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>target/amps</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Apply amp files -->
            <plugin>
                <groupId>org.alfresco.maven.plugin</groupId>
                <artifactId>alfresco-maven-plugin</artifactId>
                <configuration>
                    <warLocation>${project.build.directory}/${project.build.finalName}</warLocation>
                </configuration>
                <executions>
                    <execution>
                        <id>install-amps</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <configuration>
                            <ampLocation>target/amps</ampLocation>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Configure the Tomcat plugin. Keeping the configuration separate from the 'run' profile,
                allows explicit running of tomcat, e.g: mvn tomcat7:run-war-only
            -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${dependency.postgresql.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${dependency.mysql.version}</version>
                    </dependency>
                     <dependency>
            				<groupId>org.apache.commons</groupId>
            		      <artifactId>commons-compress</artifactId>
            		      <version>1.9</version>
        				  </dependency>
        				  <dependency>
                        <groupId>org.apache.myfaces.core</groupId>
                        <artifactId>myfaces-api</artifactId>
                        <version>1.1.8</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.myfaces.core</groupId>
                        <artifactId>myfaces-impl</artifactId>
                        <version>1.1.8</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <systemProperties>
                        <dir.root>${runtime.data.folder}/alf_data</dir.root>

                        <index.subsystem.name>solr4</index.subsystem.name>
                        <solr.host>localhost</solr.host>
                        <solr.secureComms>none</solr.secureComms>
                        <solr.port>8080</solr.port>
                        <solr.port.ssl></solr.port.ssl>
                        <solr.backup.alfresco.numberToKeep>0</solr.backup.alfresco.numberToKeep>
                        <solr.backup.archive.numberToKeep>0</solr.backup.archive.numberToKeep>
                        <solr.solr.home>${solr.config.folder}</solr.solr.home>
                        <solr.solr.model.dir>${solr.config.folder}/alfrescoModels</solr.solr.model.dir>
                        <solr.solr.content.dir>${solr.config.folder}/content</solr.solr.content.dir>
                    </systemProperties>
                    <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
                    <contextFile>${basedir}/tomcat/tomcat-context.xml</contextFile>
                    <tomcatUsers>${basedir}/tomcat/tomcat-users.xml</tomcatUsers>
                    <webapps>
                        <!-- Run solr4 alongside the repo -->
                        <webapp>
                            <groupId>org.alfresco</groupId>
                            <artifactId>alfresco-solr4</artifactId>
                            <version>${project.version}</version>
                            <contextPath>/solr4</contextPath>
                            <type>war</type>
                            <asWebapp>true</asWebapp>
                        </webapp>
                    </webapps> 
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>enterprise</id>
            <dependencies>
                <!-- Defines WAR to overlay -->
                <dependency>
                    <groupId>org.alfresco</groupId>
                    <artifactId>alfresco-enterprise</artifactId>
                    <version>${project.version}</version>
                    <classifier>nossl</classifier>
                    <type>war</type>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>integration-tests</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Wipe the database before starting tests -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>wipe-database</id>
                                <phase>pre-clean</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <sqlCommand>${db.drop.command}</sqlCommand>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-database</id>
                                <phase>pre-clean</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <sqlCommand>${db.create.command}</sqlCommand>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>run</id>
            <build>
                <plugins>
                    <!-- Download and unpack the solr4 config zip file -->
                    <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-dependency-plugin</artifactId>
                      <executions>
                        <execution>
                          <id>unpack-solr4-config</id>
                          <phase>generate-resources</phase>
                          <goals>
                            <goal>unpack</goal>
                          </goals>
                          <configuration>
                            <outputDirectory>${project.build.directory}/solr4</outputDirectory>
                            <artifactItems>
                              <artifactItem>
                                <groupId>org.alfresco</groupId>
                                <artifactId>alfresco-solr4</artifactId>
                                <version>${project.version}</version>
                                <classifier>config</classifier>
                                <overWrite>true</overWrite>
                                <type>zip</type>
                              </artifactItem>
                            </artifactItems>
                          </configuration>
                        </execution>
                      </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>filter-copy-solr4-config</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <outputDirectory>${solr.config.folder}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/solr4</directory>
                                            <excludes>
                                                <exclude>workspace-SpacesStore/conf/solrcore.properties</exclude>
                                                <exclude>archive-SpacesStore/conf/solrcore.properties</exclude>
                                            </excludes>
                                            <filtering>false</filtering>
                                        </resource>
                                        <resource>
                                            <directory>${project.build.directory}/solr4</directory>
                                            <includes>
                                                <include>workspace-SpacesStore/conf/solrcore.properties</include>
                                                <include>archive-SpacesStore/conf/solrcore.properties</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                    <useDefaultDelimiters>false</useDefaultDelimiters>
                                    <delimiters>
                                        <delimiter>@@</delimiter>
                                    </delimiters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.tomcat.maven</groupId>
                        <artifactId>tomcat7-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>run-exploded-webapp</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Use "mvn initialize -Pdata" to drop repo, solr and DB data, then re-create an empty DB -->
        <profile>
            <id>data</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-clean</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>${runtime.data.folder}</directory>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>drop-db</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip><!-- always run -->
                                    <sqlCommand>${db.drop.command}</sqlCommand>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-db</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip><!-- always run -->
                                    <sqlCommand>${db.create.command}</sqlCommand>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
